import numpy as np
from dimod import ExactSolver
from dwave.system import DWaveSampler, EmbeddingComposite
import dwave.inspector
import pandas as pd
pd.set_option("display.max_rows", 100000000)

# sampleset.first.sample takes the lowest energy sample result, without cutting any data

print("Valore MPBS vs max: 59  vs  78 con vettore  1111110001111100111110111 - NNODI: 14  NTRANSAZ: 25")


QUBO_ex16_lambda1 = np.array ([ [-70, 0, 0, 0, 0, 0, 0, 0, 48, 72, 0, 52, 0, 0, 0, 0, 0, 0, 0, 78, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0] ,
[0, -28, -26, 13, 0, 13, 0, 0, -40, 0, 64, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -26, 0, 0, 0, 0, 0, 0, 0, 0] ,
[0, 0, -76, 13, 0, 13, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 96, 96, 80, 0, 0, 0, -26, 0, 0, 0, 0, 0, 0, 64, 0] ,
[0, 0, 0, 26, -24, -26, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 12, 0, 0, 0, 0, -26, -48, 0, 0, 0, 0, 0, 0, 0] ,
[0, 0, 0, 0, -19, 0, -24, 0, 0, 0, 0, 0, 0, 0, -24, 0, 0, 60, 0, 0, 24, 0, 12, 0, 0, 0, -48, 0, 0, 0, -24, 0, 0, 0] ,
[0, 0, 0, 0, 0, 1, -16, -16, 0, 0, 40, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -26, 0, -16, 0, 0, 0, 0, 0, 0] ,
[0, 0, 0, 0, 0, 0, -58, -8, 0, 0, 48, 0, 0, 0, -12, 0, 0, 72, 0, 0, 0, 0, 0, 0, 0, 0, 0, -16, 0, 0, -24, 0, 0, 0] ,
[0, 0, 0, 0, 0, 0, 0, -32, 0, 0, 48, 0, 0, 0, 0, -9, 0, -9, 27, 0, 0, 0, 0, 0, 0, 0, 0, -16, 0, 0, 0, -9, 0, 0] ,
[0, 0, 0, 0, 0, 0, 0, 0, -17, -36, 40, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0] ,
[0, 0, 0, 0, 0, 0, 0, 0, 0, -19, 0, 13, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -13, 0, 0, 0, 0, -26, 0, 0, 0, 0, 0] ,
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -71, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 32, 0, 0, 0, 0, 0, 0] ,
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -8, -26, 0, 0, 0, 0, 0, 0, -39, 0, 0, 0, 13, 0, 0, 0, 0, -26, 0, 0, 0, 0, 0] ,
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 43, 0, 0, 0, 0, 0, 0, 0, 0, 0, 9, 22, -45, 0, 0, 0, -26, 0, 0, 0, 0, -36] ,
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -82, -30, -30, 195, 0, 0, 0, 0, -60, 0, 0, 0, 0, 0, 0, 0, -45, 0, 0, 0, 0] ,
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -108, -30, 135, 72, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -45, -24, 0, 0, 0] ,
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -49, 105, -9, 18, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -45, 0, -9, 0, 0] ,
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -151, 0, 0, 0, 0, 96, 0, 0, 0, 0, 0, 0, 0, 90, 0, 0, 0, 0] ,
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -76, 36, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 48, -9, 0, 0] ,
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -30, 0, 0, 0, 0, 0, 8, 0, 0, 0, 0, 0, 0, 18, 0, 0] ,
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -84, -16, -32, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -32, 0] ,
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -20, -32, -48, 0, 0, 0, -48, 0, 0, 0, 0, 0, -32, 0] ,
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -75, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -32, 0] ,
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 38, -9, 9, 0, -48, 0, 0, 0, 0, 0, 0, -36] ,
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 9, 0, 0, 0, -26, 0, 0, 0, 0, -36] ,
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 26, 0, 0, 0, 0, 0, 0, 0, 0, -36] ,
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 26, 0, 0, 0, 0, 0, 0, 0, 0] ,
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 48, 0, 0, 0, 0, 0, 0, 0] ,
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0] ,
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 26, 0, 0, 0, 0, 0] ,
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0] ,
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0] ,
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0] ,
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0] ,
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 36] ])

#CAP = 3
#FL = -3


#sampler = EmbeddingComposite(DWaveSampler())
sampler = EmbeddingComposite(DWaveSampler(solver=dict(topology__type='zephyr')))
sampleset = sampler.sample_qubo(- QUBO_ex16_lambda1, num_reads=5000,  label="(TRUE) Adv1_EX16: 14 nodes, 25 transactions, lambda0=1")
print(sampleset)

'''
sampler = ExactSolver()
sampleset = sampler.sample_qubo(- QUBO_ex7_lambda8)
print(sampleset)
'''

with open('output.txt', mode='w') as file_object:
    for datum in sampleset.data(fields=['sample', 'energy', 'num_occurrences']):
        print("\'",datum,"\', ",file=file_object)



dwave.inspector.show(sampleset)